Object subclass: #Casilla	instanceVariableNames: 'propietario'	classVariableNames: ''	poolDictionaries: ''	category: 'A_TheFloor'!!Casilla methodsFor: 'acessing' stamp: 'Cain 10/18/2024 00:15'!propietario: unString	propietario :=unString.! !!Casilla methodsFor: 'acessing' stamp: 'Cain 10/18/2024 00:17'!marcar: nombreJugador	propietario:=nombreJugador.! !!Casilla methodsFor: 'acessing' stamp: 'Cain 10/18/2024 00:16'!initialize 	propietario :='Ninguno'.! !!Casilla methodsFor: 'acessing' stamp: 'Cain 10/18/2024 00:14'!propietario	^propietario.! !Object subclass: #Tablero	instanceVariableNames: 'casillas tamaño'	classVariableNames: ''	poolDictionaries: ''	category: 'A_TheFloor'!!Tablero methodsFor: 'printing' stamp: 'Cain 10/18/2024 00:40'!mostrartablero	"Construir una cadena de texto con los valores de la matriz"|output|"Construir una cadena de texto con los valores de la matriz"output := String streamContents: [:stream |    1 to: (tamaño) do: [:i |        1 to: (tamaño) do: [:j |            stream nextPutAll: ((casillas  at: i at: j)propietario ) printString; space.        ].        stream cr. "Salto de línea para cada fila"    ].]."Mostrar toda la matriz en el Transcript de una vez"^output.! !!Tablero methodsFor: 'accesing' stamp: 'Cain 10/18/2024 00:32'!constructor: untamaño	tamaño:= untamaño.	casillas:= (Array2D rows:tamaño  columns:tamaño).	self inicializartablero.	! !!Tablero methodsFor: 'accesing' stamp: 'Cain 10/18/2024 00:23'!casillas: casilla	casillas :=casilla. 	"instanceVariableNames: 'casillas tamaño'"	"comment stating purpose of message"! !!Tablero methodsFor: 'accesing' stamp: 'Cain 10/18/2024 00:24'!tamaño: unInteger	tamaño:=unInteger.	"instanceVariableNames: 'casillas tamaño'"	"comment stating purpose of message"! !!Tablero methodsFor: 'accesing' stamp: 'Cain 10/18/2024 00:20'!casillas	^casillas.	"instanceVariableNames: 'casillas tamaño'"	"comment stating purpose of message"! !!Tablero methodsFor: 'accesing' stamp: 'Cain 10/18/2024 00:23'!tamaño	^tamaño.	"instanceVariableNames: 'casillas tamaño'"	"comment stating purpose of message"! !!Tablero methodsFor: 'accesing' stamp: 'Cain 10/18/2024 00:33'!inicializartablero	"Construir una cadena de texto con los valores de la matriz"	1 to: 3 do: [:i |    1 to: 3 do: [:j |			        casillas at: i at: j put: ( Casilla new ) .     ].].! !!Tablero methodsFor: 'accesing' stamp: 'Cain 10/18/2024 00:34'!initialize	self constructor:3.! !!Tablero methodsFor: 'mover' stamp: 'Cain 10/18/2024 01:00'!marcarcasilladejugadoreliminado: jugadorEliminado string:nuevoPropietario	1 to: 3 do: [:i |    1 to: 3 do: [:j |						( ((casillas  at: i at: j)propietario ) = jugadorEliminado  ) ifTrue:[					(casillas  at: i at: j) marcar: nuevoPropietario .				].      ].].! !!Tablero methodsFor: 'mover' stamp: 'Cain 10/18/2024 01:10'!moverjugador:x int:y string:nombreJugador	( ((casillas  at: x at: y)propietario ) ~= 'Ninguno' )ifTrue:[			Transcript show: ((nombreJugador asString ), 'ha eliminado a ', ((casillas  at: x at: y)propietario ) asString ).			self marcarcasilladejugadoreliminado:((casillas  at: x at: y)propietario )  string:nombreJugador.		].	((casillas  at: x at: y)) marcar:nombreJugador	! !PackageManifest subclass: #ManifestATheFloor	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'A_TheFloor-Manifest'!!ManifestATheFloor commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestATheFloor class	instanceVariableNames: ''!!ManifestATheFloor class methodsFor: 'code-critics' stamp: 'Cain 10/18/2024 00:25'!ruleReDeadMethodV1FalsePositive	^ #(#(#(#RGPackage #(#A_TheFloor)) #'2024-10-18T00:25:25.146786-03:00') )! !!ManifestATheFloor class methodsFor: 'code-critics' stamp: 'Cain 10/18/2024 00:26'!ruleRBInconsistentMethodClassificationRuleV1FalsePositive	^ #(#(#(#RGPackage #(#A_TheFloor)) #'2024-10-18T00:26:29.702563-03:00') )! !!ManifestATheFloor class methodsFor: 'code-critics' stamp: 'Cain 10/18/2024 00:24'!ruleRBSelfSentNotImplementedRuleV1FalsePositive	^ #(#(#(#RGPackage #(#A_TheFloor)) #'2024-10-18T00:24:43.729044-03:00') )! !!ManifestATheFloor class methodsFor: 'code-critics' stamp: 'Cain 10/18/2024 00:36'!ruleRBClassNotReferencedRuleV1FalsePositive	^ #(#(#(#RGPackage #(#A_TheFloor)) #'2024-10-18T00:36:28.72675-03:00') )! !!ManifestATheFloor class methodsFor: 'code-critics' stamp: 'Cain 10/18/2024 00:36'!ruleRBNoClassCommentRuleV1FalsePositive	^ #(#(#(#RGPackage #(#A_TheFloor)) #'2024-10-18T00:36:31.613893-03:00') )! !!ManifestATheFloor class methodsFor: 'code-critics' stamp: 'Cain 10/18/2024 00:51'!ruleRBCascadedNextPutAllsRuleV1FalsePositive	^ #(#(#(#RGPackage #(#A_TheFloor)) #'2024-10-18T00:51:50.032209-03:00') )! !!ManifestATheFloor class methodsFor: 'code-critics' stamp: 'Cain 10/18/2024 00:51'!ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive	^ #(#(#(#RGPackage #(#A_TheFloor)) #'2024-10-18T00:51:52.21842-03:00') )! !!ManifestATheFloor class methodsFor: 'code-critics' stamp: 'Cain 10/18/2024 01:09'!ruleRBGuardingClauseRuleV1FalsePositive	^ #(#(#(#RGPackage #(#A_TheFloor)) #'2024-10-18T01:09:08.152113-03:00') )! !!ManifestATheFloor class methodsFor: 'code-critics' stamp: 'Cain 10/18/2024 01:09'!ruleGRGuradGuardClauseRuleV1FalsePositive	^ #(#(#(#RGPackage #(#A_TheFloor)) #'2024-10-18T01:09:04.388236-03:00') )! !